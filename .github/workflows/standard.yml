# This is a reusable workflow that checks out the source code,
# installs dependencies and runs Cypress tests on a single machine
# https://docs.github.com/en/actions/learn-github-actions/reusing-workflows
name: standard
on:
  workflow_call:
    inputs:
      # most parameters are just copied from the Cypress GH Action
      # https://github.com/cypress-io/github-action/blob/master/action.yml
      record:
        description: 'Sends test results to Cypress Dashboard'
        required: false
        default: false
      config:
        description: 'Set configuration values. Separate multiple values with a comma. The values set here override any values set in your configuration file.'
        required: false
      config-file:
        description: 'Path to a JSON file where configuration values are set.'
        required: false
        default: cypress.json
      env:
        description: 'Sets Cypress environment variables'
        required: false
      browser:
        description: 'Name of the browser to use'
        required: false
      command:
        description: 'Command that overrides cypress run'
        required: false
      start:
        description: 'Command for starting local server in the background'
        required: false
      start-windows:
        description: 'A different start command on Windows'
        required: false
      build:
        description: 'Command to run in build step before starting tests'
        required: false
      install:
        description: 'Whether or not to run install'
        required: false
      install-command:
        description: 'Custom install command to use'
        required: false
      runTests:
        description: 'Whether or not to run tests'
        required: false
      wait-on:
        description: 'Local server URL to wait for'
        required: false
      wait-on-timeout:
        description: 'Amount of time to wait for wait-on url to be available'
        required: false
      parallel:
        description: 'Whether or not to load balance tests using multiple containers'
        required: false
      group:
        description: 'Group setting for tests'
        required: false
      tag:
        description: 'Tag setting for tests'
        required: false
      working-directory:
        description: 'Working directory containing Cypress folder'
        required: false
      headless:
        description: 'Whether or not to use headless mode'
        required: false
      spec:
        description: 'Provide a specific specs to run'
        required: false
      project:
        description: 'Path of project to run'
        required: false
      command-prefix:
        description: 'You can prefix the default test command using the command-prefix option.'
        required: false
      ci-build-id:
        description: 'ID associates multiple CI machines to one test run'
        required: false
      cache-key:
        description: 'Custom cache key'
        required: false
      quiet:
        description: 'Whether or not to silence any Cypress specific output from stdout'
        required: false

    secrets:
      recordKey:
        description: 'Cypress Dashboard Record Key'
        required: false

jobs:
  standard:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v2

      - name: Cypress tests ðŸ§ª
        # https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v2
        with:
          record: ${{ inputs.record }}
          config: ${{ inputs.config }}
          config-file: ${{ inputs.config-file }}
          env: ${{ inputs.env }}
          browser: ${{ inputs.browser }}
          command: ${{ inputs.command }}
          start: ${{ inputs.start }}
          start-windows: ${{ inputs.start-windows }}
          build: ${{ inputs.build }}
          install: ${{ inputs.install }}
          install-command: ${{ inputs.install-command }}
          runTests: ${{ inputs.runTests }}
          wait-on: ${{ inputs.wait-on }}
          wait-on-timeout: ${{ inputs.wait-on-timeout }}
          parallel: ${{ inputs.parallel }}
          group: ${{ inputs.group }}
          tag: ${{ inputs.tag }}
          working-directory: ${{ inputs.working-directory }}
          headless: ${{ inputs.headless }}
          spec: ${{ inputs.spec }}
          project: ${{ inputs.project }}
          command-prefix: ${{ inputs.command-prefix }}
          ci-build-id: ${{ inputs.ci-build-id }}
          cache-key: ${{ inputs.cache-key }}
          quiet: ${{ inputs.quiet }}
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.recordKey }}
